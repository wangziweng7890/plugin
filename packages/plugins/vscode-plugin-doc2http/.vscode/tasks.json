// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process
// A task runner that calls a custom pnpm script that compiles the extension.
{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "build ui",
      "command": "pnpm",
      "type": "shell",
      "args": [
        "run",
        "dev2"
      ],
      "problemMatcher": {
        "owner": "vite",
        "fileLocation": "relative",
        "severity": "error",
        "pattern": [
          {
            "regexp": "^(.*)\\s+in\\s+(.*)\\s(\\d+):(\\d+)-(\\d+)$",
            "severity": 1,
            "file": 2,
            "line": 3,
            "column": 4,
            "endColumn": 5
          },
          {
            "regexp": "^(?!Hash|Time|Version|Built at).+:\\s+(.*)$",
            "message": 0
          }
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": "^$",
          "endsPattern": "^$"
        }
      },
      "presentation": {
        "reveal": "silent"
      },
      "isBackground": true
    },
    {
      "label": "build code",
      "command": "pnpm",
      "type": "shell",
      "presentation": {
        "reveal": "silent"
      },
      // we run the custom script "dev" as defined in package.json
      "args": [
        "run",
        "dev"
      ],
      // The dev is started in watching mode
      "isBackground": true,
      // use the standard tsc in watch mode problem matcher to find compile problems in the output.
      "problemMatcher": {
        "owner": "webpack",
        "fileLocation": "relative",
        "severity": "error",
        "pattern": [
          {
            "regexp": "^(.*)\\s+in\\s+(.*)\\s(\\d+):(\\d+)-(\\d+)$",
            "severity": 1,
            "file": 2,
            "line": 3,
            "column": 4,
            "endColumn": 5
          },
          {
            "regexp": "^(?!Hash|Time|Version|Built at).+:\\s+(.*)$",
            "message": 0
          }
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": "^$",
          "endsPattern": "^$"
        }
      }
    },
    {
      "label": "build all",
      "dependsOn": [
        "build ui",
        "build code",
      ]
    }
  ]
}
